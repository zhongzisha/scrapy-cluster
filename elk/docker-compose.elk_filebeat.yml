version: '2'
# This compose file stands up Scrapy Cluster with an
# associated ELK Stack. You should run a few crawls and then import the
# `export.json` file into your Kibana objects

services:
  kafka_monitor:
    image: istresearch/scrapy-cluster:kafka-monitor-dev
    volumes:
      - logs:/usr/src/app/logs
    environment:
      - LOG_STDOUT=False
      - LOG_USE_JSON=True
    depends_on:
      - kafka-service
      - redis-service
    restart: always
  redis_monitor:
    image: istresearch/scrapy-cluster:redis-monitor-dev
    volumes:
      - logs:/usr/src/app/logs
    environment:
      - LOG_STDOUT=False
      - LOG_USE_JSON=True
    depends_on:
      - kafka-service
      - redis-service
      - zookeeper-service
    restart: always
  crawler:
    image: istresearch/scrapy-cluster:crawler-dev
    volumes:
      - logs:/usr/src/app/logs
    environment:
      - SC_LOG_STDOUT=False
      - SC_LOG_USE_JSON=True
    depends_on:
      - kafka-service
      - redis-service
      - zookeeper-service
    restart: always
  rest:
    image: istresearch/scrapy-cluster:rest-dev
    volumes:
      - logs:/usr/src/app/logs
    depends_on:
      - kafka-service
      - redis-service
    restart: always
    ports:
      - "5343:5343"
    environment:
      - LOG_STDOUT=False
      - LOG_USE_JSON=True
  redis-service:
    image: redis
    ports:
      - "6379"
    restart: always
  zookeeper-service:
    image: zookeeper
    ports:
      - "2181:2181"
    restart: always
  kafka-service:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-service:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper-service
    restart: always
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.9.3"
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
      - "9300:9300"
  kibana:
    image: "docker.elastic.co/kibana/kibana:7.9.3"
    ports:
      - "5601:5601"
    links:
      - elasticsearch
  filebeat:
    image: "docker.elastic.co/beats/filebeat:7.9.3"
    user: root
    volumes:
      - /root/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  logs:
